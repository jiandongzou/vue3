// src/mock/system/index.js
var userList = (() => {
  const result = [];
  for (let i = 0; i < 13; i++) {
    result.push({
      key: i,
      name: "@cname()",
      user: '@string("lower", 6)',
      status: '@pick(["stop","running"])',
      email: "@email",
      time: "@datetime()"
    });
  }
  return result;
})();
var notifyList = (() => {
  const result = [];
  for (let i = 0; i < 203; i++) {
    result.push({
      key: i,
      name: "@ctitle()",
      desc: "@cparagraph()",
      status: '@pick(["read","unread"])',
      user: "@last",
      time: "@datetime()"
    });
  }
  return result;
})();
var btnAuthlist = (key) => {
  const result = [];
  for (let i = 0; i < 4; i++) {
    result.push({
      name: '@pick(["\u65B0\u589E\u5217\u8868","\u5BFC\u5165\u6587\u4EF6"])',
      key: key + ":btn:@last",
      index: i
    });
  }
  return result;
};
var system_default = [
  {
    url: "/api/system/users",
    method: "post",
    timeout: 500,
    response: () => ({
      code: 200,
      message: "ok",
      data: userList
    })
  },
  {
    url: "/api/system/notifys",
    method: "post",
    timeout: 500,
    response: () => ({
      code: 200,
      message: "ok",
      data: notifyList
    })
  },
  {
    url: "/api/menu/btnAuthList",
    method: "post",
    timeout: 500,
    response: ({ body }) => ({
      code: 200,
      message: "ok",
      data: btnAuthlist(body.path || "system")
    })
  }
];
export {
  system_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic3JjL21vY2svc3lzdGVtL2luZGV4LmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXG15UHJhY3RpY2VcXFxccmVhY3QtbWFuYWdlXFxcXHNyY1xcXFxtb2NrXFxcXHN5c3RlbVxcXFxpbmRleC5qc1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCJEOlxcXFxteVByYWN0aWNlXFxcXHJlYWN0LW1hbmFnZVxcXFxzcmNcXFxcbW9ja1xcXFxzeXN0ZW1cIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0Q6L215UHJhY3RpY2UvcmVhY3QtbWFuYWdlL3NyYy9tb2NrL3N5c3RlbS9pbmRleC5qc1wiO2NvbnN0IHVzZXJMaXN0ID0gKCgpID0+IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IFtdXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEzOyBpKyspIHtcclxuICAgICAgICByZXN1bHQucHVzaCh7XHJcbiAgICAgICAgICAgIGtleTogaSxcclxuICAgICAgICAgICAgbmFtZTogJ0BjbmFtZSgpJyxcclxuICAgICAgICAgICAgdXNlcjogJ0BzdHJpbmcoXCJsb3dlclwiLCA2KScsXHJcbiAgICAgICAgICAgIHN0YXR1czogJ0BwaWNrKFtcInN0b3BcIixcInJ1bm5pbmdcIl0pJyxcclxuICAgICAgICAgICAgZW1haWw6ICdAZW1haWwnLFxyXG4gICAgICAgICAgICB0aW1lOiAnQGRhdGV0aW1lKCknXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHRcclxufSkoKVxyXG5cclxuY29uc3Qgbm90aWZ5TGlzdCA9ICgoKSA9PiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBbXVxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyMDM7IGkrKykge1xyXG4gICAgICAgIHJlc3VsdC5wdXNoKHtcclxuICAgICAgICAgICAga2V5OiBpLFxyXG4gICAgICAgICAgICBuYW1lOiAnQGN0aXRsZSgpJyxcclxuICAgICAgICAgICAgZGVzYzogJ0BjcGFyYWdyYXBoKCknLFxyXG4gICAgICAgICAgICBzdGF0dXM6ICdAcGljayhbXCJyZWFkXCIsXCJ1bnJlYWRcIl0pJyxcclxuICAgICAgICAgICAgdXNlcjogJ0BsYXN0JyxcclxuICAgICAgICAgICAgdGltZTogJ0BkYXRldGltZSgpJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0XHJcbn0pKClcclxuXHJcbmNvbnN0IGJ0bkF1dGhsaXN0ID0gKGtleSkgPT4ge1xyXG4gICAgY29uc3QgcmVzdWx0PSBbXVxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcclxuICAgICAgICByZXN1bHQucHVzaCh7XHJcbiAgICAgICAgICAgIG5hbWU6ICdAcGljayhbXCJcdTY1QjBcdTU4OUVcdTUyMTdcdTg4NjhcIixcIlx1NUJGQ1x1NTE2NVx1NjU4N1x1NEVGNlwiXSknLFxyXG4gICAgICAgICAgICBrZXk6IGtleSArICc6YnRuOicgKyAnQGxhc3QnLFxyXG4gICAgICAgICAgICBpbmRleDogaVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFtcclxuICAgIHtcclxuICAgICAgICB1cmw6ICcvYXBpL3N5c3RlbS91c2VycycsXHJcbiAgICAgICAgbWV0aG9kOiAncG9zdCcsXHJcbiAgICAgICAgdGltZW91dDogNTAwLFxyXG4gICAgICAgIHJlc3BvbnNlOiAoKSA9PiAoe1xyXG4gICAgICAgICAgICBjb2RlOiAyMDAsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdvaycsXHJcbiAgICAgICAgICAgIGRhdGE6IHVzZXJMaXN0XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdXJsOiAnL2FwaS9zeXN0ZW0vbm90aWZ5cycsXHJcbiAgICAgICAgbWV0aG9kOiAncG9zdCcsXHJcbiAgICAgICAgdGltZW91dDogNTAwLFxyXG4gICAgICAgIHJlc3BvbnNlOiAoKSA9PiAoe1xyXG4gICAgICAgICAgICBjb2RlOiAyMDAsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdvaycsXHJcbiAgICAgICAgICAgIGRhdGE6IG5vdGlmeUxpc3RcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB1cmw6ICcvYXBpL21lbnUvYnRuQXV0aExpc3QnLFxyXG4gICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgICAgIHRpbWVvdXQ6IDUwMCxcclxuICAgICAgICByZXNwb25zZTogKHsgYm9keSB9KSA9PiAoe1xyXG4gICAgICAgICAgICBjb2RlOiAyMDAsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdvaycsXHJcbiAgICAgICAgICAgIGRhdGE6IGJ0bkF1dGhsaXN0KGJvZHkucGF0aCB8fCAnc3lzdGVtJylcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5dXHJcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBNFEsSUFBTSxZQUFZLE1BQU07QUFDaFMsUUFBTSxTQUFTLENBQUM7QUFDaEIsV0FBUyxJQUFJLEdBQUcsSUFBSSxJQUFJLEtBQUs7QUFDekIsV0FBTyxLQUFLO0FBQUEsTUFDUixLQUFLO0FBQUEsTUFDTCxNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixRQUFRO0FBQUEsTUFDUixPQUFPO0FBQUEsTUFDUCxNQUFNO0FBQUEsSUFDVixDQUFDO0FBQUEsRUFDTDtBQUNBLFNBQU87QUFDWCxHQUFHO0FBRUgsSUFBTSxjQUFjLE1BQU07QUFDdEIsUUFBTSxTQUFTLENBQUM7QUFDaEIsV0FBUyxJQUFJLEdBQUcsSUFBSSxLQUFLLEtBQUs7QUFDMUIsV0FBTyxLQUFLO0FBQUEsTUFDUixLQUFLO0FBQUEsTUFDTCxNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixRQUFRO0FBQUEsTUFDUixNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsSUFDVixDQUFDO0FBQUEsRUFDTDtBQUNBLFNBQU87QUFDWCxHQUFHO0FBRUgsSUFBTSxjQUFjLENBQUMsUUFBUTtBQUN6QixRQUFNLFNBQVEsQ0FBQztBQUNmLFdBQVMsSUFBSSxHQUFHLElBQUksR0FBRyxLQUFLO0FBQ3hCLFdBQU8sS0FBSztBQUFBLE1BQ1IsTUFBTTtBQUFBLE1BQ04sS0FBSyxNQUFNO0FBQUEsTUFDWCxPQUFPO0FBQUEsSUFDWCxDQUFDO0FBQUEsRUFDTDtBQUNBLFNBQU87QUFDWDtBQUVBLElBQU8saUJBQVE7QUFBQSxFQUNYO0FBQUEsSUFDSSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixTQUFTO0FBQUEsSUFDVCxVQUFVLE9BQU87QUFBQSxNQUNiLE1BQU07QUFBQSxNQUNOLFNBQVM7QUFBQSxNQUNULE1BQU07QUFBQSxJQUNWO0FBQUEsRUFDSjtBQUFBLEVBQ0E7QUFBQSxJQUNJLEtBQUs7QUFBQSxJQUNMLFFBQVE7QUFBQSxJQUNSLFNBQVM7QUFBQSxJQUNULFVBQVUsT0FBTztBQUFBLE1BQ2IsTUFBTTtBQUFBLE1BQ04sU0FBUztBQUFBLE1BQ1QsTUFBTTtBQUFBLElBQ1Y7QUFBQSxFQUNKO0FBQUEsRUFDQTtBQUFBLElBQ0ksS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsU0FBUztBQUFBLElBQ1QsVUFBVSxDQUFDLEVBQUUsS0FBSyxPQUFPO0FBQUEsTUFDckIsTUFBTTtBQUFBLE1BQ04sU0FBUztBQUFBLE1BQ1QsTUFBTSxZQUFZLEtBQUssUUFBUSxRQUFRO0FBQUEsSUFDM0M7QUFBQSxFQUNKO0FBQ0o7IiwKICAibmFtZXMiOiBbXQp9Cg==
